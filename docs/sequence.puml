@startuml

skinparam noteBorderColor Black
skinparam noteBorderThickness 1
skinparam noteBackgroundColor Yellow
skinparam legendBackgroundColor WhiteSmoke

skinparam sequence {
	BoxBorderColor Black
	BoxFontSize 20

	ArrowColor Black
	ArrowThickness 1

	ActorBorderColor Black
	ActorBorderThickness 3
	ActorBackgroundColor Business
	ActorFontSize 15

	ParticipantBorderColor Black
	ParticipantBorderThickness 1
	ParticipantBackgroundColor Business
	ParticipantFontSize 15

	LifeLineBorderColor Black
	LifeLineBorderThickness 1
	LifeLineBackgroundColor LightGray
}


 legend top right
|= |= Legend |
|<back:LightBlue>   </back>| Participants from this project - Device Plugin and CNI |
|<back:Dodgerblue>   </back>| Threads within Device Plugin |
|<back:Business>   </back>| Participants external to this project |
|<back:Turquoise>   </back>| Code waits, listening on socket |
|<back:Yellow>   </back>| Notes |
endlegend 



actor "User"
participant "Linux"
participant "Kubelet"
box "Device Plugin" #LightBlue
	participant "DP Main Thread" #dodgerblue
	participant "DP UDS Server Thread" #dodgerblue
end box
participant "CNI" #LightBlue
participant "Pod/AF_XDP App"

== Initialization ==
autonumber

"User" -> "Kubelet": network attachment definition (CNI config)
"User" -> "DP Main Thread": deploy
activate "DP Main Thread"

"DP Main Thread" -> "DP Main Thread": config.json
"DP Main Thread" -> "Linux": create log file
"DP Main Thread" -> "Linux" : Check host for requirements
"DP Main Thread" -> "Linux": net.Interfaces()

activate "DP Main Thread" #DarkGray
note right #DarkGray: <color #White>discover resources</color>

"Linux" --> "DP Main Thread": interface list

"DP Main Thread" -> "Linux" : os.Readlink /sys/class/net/<interface>/device/driver
"Linux" --> "DP Main Thread" : driver name

activate "DP Main Thread" #SlateGray
note right #SlateGray: <color #White>loop interfaces, build device list</color>

deactivate "DP Main Thread"

autonumber stop
"DP Main Thread" [hidden]-> "DP Main Thread"
autonumber resume

deactivate "DP Main Thread"

"DP Main Thread" -> "DP Main Thread": start GRPC
"DP Main Thread" -> "Kubelet": GRPC: register
"DP Main Thread" -> "Kubelet": GRPC: device list

deactivate "DP Main Thread"

== Pod Creation ==
autonumber

"User" -> "Kubelet": create pod
"Kubelet" -> "DP Main Thread": GRPC: Allocate(subfunction)
activate "DP Main Thread"

"DP Main Thread" -> "Linux" : devlink port add pci/0000:3b:00.0 flavour pcisf pfnum 0 sfnum 123
"Linux" --> "DP Main Thread" : pci/port/index (e.g. pci/0000:3b:00.0/12)

"DP Main Thread" -> "Linux" : devlink port function set pci/0000:3b:00.0/12 state active
"Linux" --> "DP Main Thread" : return 0

"DP Main Thread" -> "Linux": net.if_nametoindex(subfunction)
"Linux" --> "DP Main Thread": if_index
"DP Main Thread" -> "Linux": bpf.xsk_setup_xdp_prog(if_index)
"Linux" --> "DP Main Thread": XSK file descriptor

"DP Main Thread" -> "Linux": create UDS

"DP Main Thread" -> "DP UDS Server Thread" ** : create & start UDS server
"DP Main Thread" -> "DP UDS Server Thread" : subfunction, XSK FD, UDS filepath

hnote over "DP UDS Server Thread" #Turquoise
	  listen for
	  connection
endhnote

"DP Main Thread" --> "Kubelet": GRPC: AllocateResponse(UDS mount path, pod env vars)
deactivate "DP Main Thread"

autonumber stop
"Kubelet" -[#Red]>> "Pod/AF_XDP App" : <color:Red>Kubelet starts creating the pod around now
autonumber resume

"Kubelet" -> "CNI" : cmdAdd(subfunction, namespace, config)
activate "CNI"
"CNI" -> "CNI" : cni.IPAM

"CNI" -> "Pod/AF_XDP App" : place subfunction in pod netns
"CNI" -> "Kubelet" : return 0

deactivate "CNI"

autonumber stop

== Pod Running ==

"Kubelet" -> "Pod/AF_XDP App" : start pod
"Pod/AF_XDP App" -> "Pod/AF_XDP App" : application start
activate "Pod/AF_XDP App"

"Pod/AF_XDP App" -> "DP UDS Server Thread": /connect,hostname
note right
	AF_XDP application starts
	UDS handshake begins
end note
activate "DP UDS Server Thread"
"DP UDS Server Thread" -> "Kubelet": podresources.ListPodResourcesRequest()
"Kubelet" --> "DP UDS Server Thread": podresources.ListPodResourcesResponse()
"DP UDS Server Thread" -> "DP UDS Server Thread": validate hostname against subfunction
"DP UDS Server Thread" --> "Pod/AF_XDP App": /host_ok
deactivate "DP UDS Server Thread"
hnote over "DP UDS Server Thread" #Turquoise
	listen for
	request
end note

"Pod/AF_XDP App" -> "DP UDS Server Thread": /xsk_map_fd,subfunction
activate "DP UDS Server Thread"
"DP UDS Server Thread" -> "DP UDS Server Thread": FD for subfunction
"DP UDS Server Thread" --> "Pod/AF_XDP App": /fd_ack,FD
deactivate "DP UDS Server Thread"

hnote over "DP UDS Server Thread" #Turquoise
	listen for
	request
endhnote

"Pod/AF_XDP App" -> "DP UDS Server Thread": /config_busy_poll,FD
activate "DP UDS Server Thread"
"DP UDS Server Thread" -> "Linux" : bpf.setsockopt(FD, BUSY_POLL)
"Linux" --> "DP UDS Server Thread" : return 0
"DP UDS Server Thread" --> "Pod/AF_XDP App": /config_busy_poll_ack
deactivate "DP UDS Server Thread"

hnote over "DP UDS Server Thread" #Turquoise
	listen for
	request
endhnote

"Pod/AF_XDP App" -> "DP UDS Server Thread": /fin
activate "DP UDS Server Thread"
"DP UDS Server Thread" --> "Pod/AF_XDP App": /fin_ack

note right: UDS handshake ends
deactivate "DP UDS Server Thread"

destroy "DP UDS Server Thread"

== Pod Deletion ==
autonumber

"User" -> "Kubelet": delete pod
"Kubelet" -> "Pod/AF_XDP App" : stop pod
deactivate "Pod/AF_XDP App"
"Kubelet" -> "CNI" : cmdDel(subfunction, config)
activate "CNI"
"CNI" -> "Pod/AF_XDP App" : subfunction from pod to host netns
"Pod/AF_XDP App" --> "CNI" : subfunction
"CNI" -> "Linux" : clear ethtool filters
"CNI" -> "CNI" : clear IPAM
"CNI" -> "Linux": net.if_nametoindex(subfunction)
"Linux" --> "CNI": if_index
"CNI" -> "Linux": bpf.set_link_xdp_fd(if_index, -1)
"Linux" --> "CNI": return 0

"CNI" -> "Linux" : devlink port list | grep subfunction
"Linux" --> "CNI" : pci/port/index (e.g. pci/0000:3b:00.0/12)

"CNI" -> "Linux" : devlink port function set pci/0000:3b:00.0/12 state inactive
"Linux" --> "CNI" : return 0

"CNI" -> "Linux" : devlink port del pci/0000:3b:00.0/12 
"Linux" --> "CNI" : return 0

"CNI" --> "Kubelet": return 0
deactivate "CNI"

"Kubelet" -> "Pod/AF_XDP App" : delete pod
deactivate "Pod/AF_XDP App"

@enduml